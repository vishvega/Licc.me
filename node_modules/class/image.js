const crypto = require("crypto");
const sharp = require("sharp");

class Image {
    static url(filename, type) {
        return filename === null ? `/${type}/default.jpg` : `/${type}/${filename}`;
    }

    static async save(file, folder, size, forcePNG = false) {
        let filename = null;

        if (typeof file === "string") {
            const dataURL = file.split(",")[1];

            if (dataURL !== undefined) {
                const buffer = Buffer.from(dataURL, "base64");
                let type = null;
                if (buffer.toString("hex", 0, 3) === "ffd8ff" || buffer.toString("hex", 0, 6) === "474946383961" || buffer.toString("hex", 0, 6) === "474946383761") {
                    type = ".jpg";
                } else if (buffer.toString("hex", 0, 8) === "89504e470d0a1a0a") {
                    type = ".png";
                }

                if (type !== null || forcePNG) {
                    filename = crypto.randomBytes(8).toString("hex") + (forcePNG ? ".png" : type);

                    try {
                        await sharp(buffer).resize(size, size).toFile(`public/${folder}/${filename}`);
                    } catch (error) {
                        
                    }
                }
            }
        }

        return filename;
    }
}

module.exports = Image;