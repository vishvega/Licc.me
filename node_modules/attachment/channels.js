const ObjectId = require("mongodb").ObjectId;
const channel = require("class/channel.js");
const upload = require("class/upload.js");

module.exports = async (session, query, message) => {
    if (await session.set()) {
        const { channel_id } = query;

        if (await channel.hasDMPermission(channel_id, session.user_id)) {
            const { text, file } = message;

            if (typeof text === "string") {
                if (Buffer.from(text, "utf8").byteLength <= 1024) {
                    const filename = upload.save(file.file, file.name, channel_id);

                    if (filename !== null) {
                        const db = await require("class/database.js");
                        const result = await db.collection("messages").insertOne({ channel_id: ObjectId(channel.toObjectId(channel_id)), user_id: ObjectId(session.user_id), text: text, attachment: filename, date: new Date() });

                        if (result.insertedCount === 1) {
                            if (channel_id !== channel.EVERYONE) {
                                channel.markAsUnread(channel_id, session.user_id);
                            }

                            return {
                                status: true,
                                type: "MESSAGE",
                                id: result.insertedId.toString(),
                                channel_id: channel_id,
                                text: text,
                                attachment: filename,
                                author: {
                                    id: session.user_id,
                                    username: session.username,
                                    tag: session.tag,
                                    avatar: session.avatar
                                }
                            }
                        } else {
                            return {
                                status: false,
                                error: "Failed to send message"
                            }
                        }
                    } else {
                        return {
                            status: false,
                            error: "Invalid file"
                        }
                    }
                } else {
                    return {
                        status: false,
                        error: "Message is too long"
                    }
                }
            } else {
                return {
                    status: false,
                    error: "Message is required"
                }
            }
        } else {
            return {
                status: false,
                error: "Missing permissions"
            }
        }
    } else {
        return {
            status: false
        }
    }
}