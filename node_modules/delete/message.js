const ObjectId = require("mongodb").ObjectId;
const fs = require("fs");
const channel = require("class/channel.js");

module.exports = async (session, query) => {
    if (await session.set()) {
        const { channel_id, message_id } = query;

        if (channel.isValidId(channel.toObjectId(channel_id)) && channel.isValidId(message_id)) {
            const db = await require("class/database.js");
            const find = await db.collection("messages").findOne({ _id: ObjectId(message_id), channel_id: ObjectId(channel.toObjectId(channel_id)), user_id: ObjectId(session.user_id) }, { projection: { _id: 0, attachment: 1 } });

            if (find !== null) {
                const attachment = find.attachment;

                if (attachment) {
                    try {
                        fs.unlinkSync(`public/attachments/${channel_id}/${attachment}`);
                    } catch (error) {
                        
                    }
                }

                const result = await db.collection("messages").deleteOne({ _id: ObjectId(message_id), user_id: ObjectId(session.user_id) });

                if (result.deletedCount === 1) {
                    const message = {
                        status: true,
                        type: "MESSAGE_DELETE",
                        channel_id: channel_id,
                        message_id: message_id
                    }

                    if (attachment) {
                        message.attachment = attachment;
                    }

                    return message;
                } else {
                    return {
                        status: false,
                        error: "Failed to delete message"
                    }
                }
            } else {
                return {
                    status: false,
                    error: "Missing permissions"
                }
            }
        } else {
            return {
                status: false,
                error: "Invalid message id"
            }
        }
    } else {
        return {
            status: false
        }
    }
}