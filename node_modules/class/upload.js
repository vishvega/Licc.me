const crypto = require("crypto");
const fs = require("fs");

class Upload {
    static save(file, name, channel_id) {
        let filename = null;

        if (typeof file === "string" && typeof name === "string") {
            const dataURL = file.split(",")[1];

            if (dataURL !== undefined) {
                const buffer = Buffer.from(dataURL, "base64");
                const id = crypto.randomBytes(8).toString("hex");
                let extension = name.split(".");
                extension = extension[extension.length - 1].length > 0 ? "." + extension[extension.length - 1] : "";

                try {
                    const path = `public/attachments/${channel_id}`;
                    if (!fs.existsSync(path)) {
                        fs.mkdirSync(path);
                    }

                    fs.writeFileSync(`${path}/${id + extension}`, buffer);
                    filename = id + extension;
                } catch (error) {

                }
            }
        }

        return filename;
    }

    static delete(channel_id) {
        const path = `public/attachments/${channel_id}`;
        try {
            if (fs.statSync(path).isDirectory()) {
                const files = fs.readdirSync(path);
                for (const file of files) {
                    try {
                        fs.unlinkSync(`${path}/${file}`);
                    } catch (error) {

                    }
                }
                try {
                    fs.rmdirSync(path);
                } catch (error) {
                    
                }
            }
        } catch (error) {
        }
    }
}

module.exports = Upload;